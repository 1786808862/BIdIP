@page "/machinedetailinfos/delete"
@using Microsoft.EntityFrameworkCore
@using BidIP.Models
@inject IDbContextFactory<BidIP.Data.BidIPContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>MachineDetailInfo</h2>
    <hr />
    @if (machinedetailinfo is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@machinedetailinfo.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IpAddress</dt>
            <dd class="col-sm-10">@machinedetailinfo.IpAddress</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">LastTime</dt>
            <dd class="col-sm-10">@machinedetailinfo.LastTime</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">LastSSYTime</dt>
            <dd class="col-sm-10">@machinedetailinfo.LastSSYTime</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">SsyCount</dt>
            <dd class="col-sm-10">@machinedetailinfo.SsyCount</dd>
        </dl>
        <EditForm method="post" Model="machinedetailinfo" OnValidSubmit="DeleteMachineDetailInfo" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(machinedetailinfo is null)">Delete</button> |
            <a href="/machinedetailinfos">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private MachineDetailInfo? machinedetailinfo;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        machinedetailinfo = await context.MachineDetailInfo.FirstOrDefaultAsync(m => m.Id == Id);

        if (machinedetailinfo is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteMachineDetailInfo()
    {
        using var context = DbFactory.CreateDbContext();
        context.MachineDetailInfo.Remove(machinedetailinfo!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/machinedetailinfos");
    }
}
